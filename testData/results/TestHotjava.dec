public class TestHotjava {
   public void test() {
      System.out.println("Hello!");// 3
   }// 2

   public void testJsr() {
      try {
         System.out.println("Try");// 7 8
      } finally {
         System.out.println("Jsr");
      }

   }// 10

   // $QF: Could not inline inconsistent finally blocks
   // $QF: Could not create synchronized statement, marking monitor enters and exits
   public void testMonitor1() {
      synchronized(this){} // $QF: monitorenter // 15

      try {
         System.out.println("Synchronized");// 16
      } catch (Throwable var3) {
         // $QF: monitorexit
         throw var3;
      }

      // $QF: monitorexit
   }

   // $QF: Could not inline inconsistent finally blocks
   // $QF: Could not create synchronized statement, marking monitor enters and exits
   public void testMonitor2(Object var1) {
      synchronized(var1){} // $QF: monitorenter // 21

      try {
         System.out.println("Synchronized");// 22
      } catch (Throwable var4) {
         // $QF: monitorexit
         throw var4;
      }

      // $QF: monitorexit
   }

   // $QF: Could not inline inconsistent finally blocks
   // $QF: Could not create synchronized statement, marking monitor enters and exits
   public void testMonitor3() {
      synchronized(this){} // $QF: monitorenter // 27

      try {
         try {
            System.out.println("Try");// 28 29
         } finally {
            System.out.println("Jsr");
         }
      } catch (Throwable var10) {
         // $QF: monitorexit
         throw var10;
      }

      // $QF: monitorexit
   }
}

class 'TestHotjava' {
   method 'test ()V' {
      0      2
      1      2
      2      2
      3      2
      4      2
      5      2
      6      2
      7      2
      8      3
   }

   method 'testJsr ()V' {
      0      7
      1      7
      2      7
      3      7
      4      7
      5      7
      c      9
      d      9
      e      9
      f      9
      10      9
      11      9
      12      9
      18      12
   }

   method 'testMonitor1 ()V' {
      0      17
      3      17
      4      20
      5      20
      6      20
      7      20
      8      20
      9      20
      d      26
      e      27
      10      22
      11      23
   }

   method 'testMonitor2 (Ljava/lang/Object;)V' {
      0      32
      3      32
      4      35
      5      35
      6      35
      7      35
      8      35
      9      35
      d      41
      e      42
      10      37
      11      38
   }

   method 'testMonitor3 ()V' {
      0      47
      3      47
      4      51
      5      51
      6      51
      7      51
      8      51
      9      51
      12      53
      13      53
      14      53
      15      53
      16      53
      17      53
      18      53
      19      53
      25      60
      26      61
      28      56
      29      57
   }
}

Lines mapping:
2 <-> 4
3 <-> 3
7 <-> 8
8 <-> 8
10 <-> 13
15 <-> 18
16 <-> 21
21 <-> 33
22 <-> 36
27 <-> 48
28 <-> 52
29 <-> 52
Not mapped:
31
