package pkg;

public class TestPatternMatchingInteger {
   public int testSimple(Object obj) {
      if (obj instanceof Integer i) {// 5
         return i + 1;// 6
      }

      return 1;// 9
   }

   public int testMulti(Object a, Object b) {
      if (a instanceof Integer ai && b instanceof Integer bi) {// 13
         return ai + bi;// 14
      }

      if (a instanceof Integer ai) {// 15
         return ai;// 16
      }

      if (b instanceof Integer bi) {// 17
         return bi;// 18
      }

      return 0;// 21
   }

   public int testMulti2(Object a, Object b) {
      int result = 0;// 25
      if (a instanceof Integer bi) {// 26
         result += bi;// 27
      }

      if (b instanceof Integer bi) {// 29
         result += bi;// 30
      }

      return result;// 33
   }

   public int testMultiDifferent(Object a, Object b) {
      if (a instanceof Integer i && b instanceof String s) {// 37
         return i + s.length();// 38
      }

      return 0;// 41
   }

   public void testDeMorgan(Object obj) {
      if (obj instanceof Integer i && i >= 1 && i >= 41) {// 45
         System.out.println(i);// 48
         return;// 50
      }

      System.out.println("i");// 46
   }
}

class 'pkg/TestPatternMatchingInteger' {
   method 'testSimple (Ljava/lang/Object;)I' {
      0      4
      1      4
      2      4
      3      4
      4      4
      b      4
      c      5
      d      5
      e      5
      f      5
      10      5
      11      5
      12      5
      13      8
      14      8
   }

   method 'testMulti (Ljava/lang/Object;Ljava/lang/Object;)I' {
      0      12
      1      12
      2      12
      3      12
      4      12
      b      12
      c      12
      d      12
      e      12
      f      12
      10      12
      17      12
      18      12
      19      13
      1a      13
      1b      13
      1c      13
      1d      13
      1e      13
      1f      13
      20      13
      21      13
      22      13
      23      13
      24      16
      25      16
      26      16
      27      16
      28      16
      2f      16
      30      16
      31      17
      32      17
      33      17
      34      17
      35      17
      36      17
      37      20
      38      20
      39      20
      3a      20
      3b      20
      42      20
      43      20
      44      21
      45      21
      46      21
      47      21
      48      21
      49      21
      4a      24
      4b      24
   }

   method 'testMulti2 (Ljava/lang/Object;Ljava/lang/Object;)I' {
      0      28
      1      28
      2      29
      3      29
      4      29
      5      29
      6      29
      d      29
      e      29
      10      30
      11      30
      12      30
      13      30
      14      30
      16      30
      17      33
      18      33
      19      33
      1a      33
      1b      33
      22      33
      23      33
      25      34
      26      34
      27      34
      28      34
      29      34
      2b      34
      2c      37
      2d      37
   }

   method 'testMultiDifferent (Ljava/lang/Object;Ljava/lang/Object;)I' {
      0      41
      1      41
      2      41
      3      41
      4      41
      b      41
      c      41
      d      41
      e      41
      f      41
      10      41
      17      41
      18      41
      19      42
      1a      42
      1b      42
      1c      42
      1d      42
      1e      42
      1f      42
      20      42
      21      42
      22      42
      23      42
      24      45
      25      45
   }

   method 'testDeMorgan (Ljava/lang/Object;)V' {
      0      49
      1      49
      2      49
      3      49
      4      49
      b      49
      c      49
      d      49
      e      49
      f      49
      10      49
      11      49
      14      49
      15      49
      16      49
      17      49
      18      49
      19      49
      1a      49
      1d      54
      1e      54
      1f      54
      20      54
      21      54
      22      54
      23      54
      24      54
      28      50
      29      50
      2a      50
      2b      50
      2c      50
      2f      51
   }
}

Lines mapping:
5 <-> 5
6 <-> 6
9 <-> 9
13 <-> 13
14 <-> 14
15 <-> 17
16 <-> 18
17 <-> 21
18 <-> 22
21 <-> 25
25 <-> 29
26 <-> 30
27 <-> 31
29 <-> 34
30 <-> 35
33 <-> 38
37 <-> 42
38 <-> 43
41 <-> 46
45 <-> 50
46 <-> 55
48 <-> 51
50 <-> 52
