package pkg;

import java.util.Collection;
import java.util.List;

public class TestIterationOverGenericsWithoutLvt {
   public void test1(List<Object> var1) {
      int var2 = 0;

      for(<unknown> var4_1 : var1) {
         ++var2;
         System.out.println(var4_1.hashCode());
      }

   }

   public void test2(List<? extends Number> var1) {
      int var2 = -1;

      for(<unknown> var4_1 : var1) {
         if (var4_1.intValue() > var2) {
            var2 = var4_1.intValue();
         }
      }

      System.out.println(var2);
   }

   public <T extends List<T>> void test3(List<T> var1) {
      for(Object var3 : var1) {
         this.test3((List<T>)var3);
      }

   }

   public <T extends Collection<?>> void test4(Collection<? extends T> var1) {
      for(<unknown> var3_1 : var1) {
         for(Object var5 : var3_1) {
            System.out.println(var5);
         }
      }

   }

   public <T extends Comparable<T>> void test5(Iterable<T> var1) {
      Object var2 = null;

      for(Object var4 : var1) {
         if (var2 == null) {
            var2 = var4;
         } else {
            int var5 = ((Comparable)var2).compareTo(var4);
            var2 = var5 >= 0 ? var2 : var4;
         }
      }

      System.out.println(var2);
   }
}

class 'pkg/TestIterationOverGenericsWithoutLvt' {
   method 'test1 (Ljava/util/List;)V' {
      0      7
      1      7
      2      9
      3      9
      4      9
      5      9
      6      9
      7      9
      8      9
      12      9
      13      9
      14      9
      15      9
      16      9
      17      9
      18      9
      19      9
      1a      10
      1b      10
      1c      10
      1d      11
      1e      11
      1f      11
      20      11
      21      11
      22      11
      23      11
      24      11
      25      11
      26      11
      27      11
      2b      14
   }

   method 'test2 (Ljava/util/List;)V' {
      0      17
      1      17
      2      19
      3      19
      4      19
      5      19
      6      19
      7      19
      8      19
      12      19
      13      19
      14      19
      15      19
      16      19
      17      19
      18      19
      19      19
      1a      19
      1b      19
      1c      19
      1d      20
      1e      20
      1f      20
      20      20
      21      20
      22      20
      23      20
      26      21
      27      21
      28      21
      29      21
      2a      21
      2b      21
      2f      25
      30      25
      31      25
      32      25
      33      25
      34      25
      35      25
      36      26
   }

   method 'test3 (Ljava/util/List;)V' {
      0      29
      1      29
      2      29
      3      29
      4      29
      5      29
      6      29
      10      29
      11      29
      12      29
      13      29
      14      29
      15      29
      16      29
      17      29
      18      29
      19      29
      1a      30
      1b      30
      1c      30
      1d      30
      1e      30
      22      33
   }

   method 'test4 (Ljava/util/Collection;)V' {
      0      36
      1      36
      2      36
      3      36
      4      36
      5      36
      6      36
      10      36
      11      36
      12      36
      13      36
      14      36
      15      36
      16      36
      17      36
      18      36
      19      36
      1a      37
      1b      37
      1c      37
      1d      37
      1e      37
      1f      37
      20      37
      21      37
      2c      37
      2d      37
      2e      37
      2f      37
      30      37
      31      37
      32      37
      33      37
      34      37
      35      38
      36      38
      37      38
      38      38
      39      38
      3a      38
      3b      38
      3c      38
      43      42
   }

   method 'test5 (Ljava/lang/Iterable;)V' {
      0      45
      1      45
      2      47
      3      47
      4      47
      5      47
      6      47
      7      47
      8      47
      12      47
      13      47
      14      47
      15      47
      16      47
      17      47
      18      47
      19      47
      1a      47
      1b      47
      1c      47
      1d      48
      1e      48
      21      49
      22      49
      23      49
      27      51
      28      51
      29      51
      2a      51
      2b      51
      2c      51
      2d      51
      2e      51
      2f      51
      30      51
      31      52
      32      52
      33      52
      36      52
      3a      52
      3c      52
      40      56
      41      56
      42      56
      43      56
      44      56
      45      56
      46      56
      47      57
   }
}

Lines mapping:
