package pkg;

import java.lang.runtime.SwitchBootstraps;

public class TestSwitchPatternMatching5 {
   static void test(TestSwitchPatternMatching5.Shape s) {
      TestSwitchPatternMatching5.Shape var1 = s;// 5
      byte var2 = 0;

      while(true) {
         switch(SwitchBootstraps.typeSwitch<"typeSwitch",TestSwitchPatternMatching5.Triangle,TestSwitchPatternMatching5.Triangle,TestSwitchPatternMatching5.Triangle,TestSwitchPatternMatching5.Triangle>(
            var1, var2
         )) {
            case -1:
               System.out.println("null");// 15
               return;// 19
            case 0: {
               TestSwitchPatternMatching5.Triangle t = (TestSwitchPatternMatching5.Triangle)var1;// 6
               if (!(t.calculateArea() > 150.0)) {
                  var2 = 1;
                  break;
               }

               System.out.println("Larger triangle");// 7
               return;
            }
            case 1: {
               TestSwitchPatternMatching5.Triangle t = (TestSwitchPatternMatching5.Triangle)var1;// 8
               if (!(t.calculateArea() > 50.0)) {
                  var2 = 2;
                  break;
               }

               System.out.println("Smaller triangle");// 9
               return;
            }
            case 2: {
               TestSwitchPatternMatching5.Triangle t = (TestSwitchPatternMatching5.Triangle)var1;// 10
               if (!(t.calculateArea() > 100.0)) {
                  var2 = 3;
                  break;
               }

               System.out.println("Large triangle");// 11
               return;
            }
            case 3: {
               TestSwitchPatternMatching5.Triangle t = (TestSwitchPatternMatching5.Triangle)var1;// 12
               System.out.println("Small triangle");// 13
               return;
            }
            default:
               System.out.println("Non-triangle");// 17
               return;
         }
      }
   }

   private abstract class Shape {
      abstract double calculateArea();
   }

   private class Triangle extends TestSwitchPatternMatching5.Shape {
      @Override
      double calculateArea() {
         return 0.0;// 29
      }
   }
}

class 'pkg/TestSwitchPatternMatching5' {
   method 'test (Lpkg/TestSwitchPatternMatching5$Shape;)V' {
      0      6
      1      6
      2      7
      3      7
      4      11
      5      11
      6      10
      7      10
      8      10
      9      10
      a      10
      b      10
      2c      17
      2d      17
      2e      17
      2f      17
      30      17
      31      18
      32      18
      33      18
      34      18
      35      18
      36      18
      37      18
      38      18
      39      18
      3c      19
      3d      19
      3e      20
      41      23
      42      23
      43      23
      44      23
      45      23
      46      23
      47      23
      48      23
      4c      27
      4d      27
      4e      27
      4f      27
      50      27
      51      27
      52      28
      53      28
      54      28
      55      28
      56      28
      57      28
      58      28
      59      28
      5a      28
      5b      28
      5e      29
      5f      29
      60      30
      63      33
      64      33
      65      33
      66      33
      67      33
      68      33
      69      33
      6a      33
      6e      37
      6f      37
      70      37
      71      37
      72      37
      73      37
      74      38
      75      38
      76      38
      77      38
      78      38
      79      38
      7a      38
      7b      38
      7c      38
      7d      38
      80      39
      81      39
      82      40
      85      43
      86      43
      87      43
      88      43
      89      43
      8a      43
      8b      43
      8c      43
      90      47
      91      47
      92      47
      93      47
      94      47
      95      47
      96      48
      97      48
      98      48
      99      48
      9a      48
      9b      48
      9c      48
      9d      48
      a1      14
      a2      14
      a3      14
      a4      14
      a5      14
      a6      14
      a7      14
      a8      14
      ac      52
      ad      52
      ae      52
      af      52
      b0      52
      b1      52
      b2      52
      b3      52
      b7      15
   }
}

class 'pkg/TestSwitchPatternMatching5$Triangle' {
   method 'calculateArea ()D' {
      0      65
      1      65
   }
}

Lines mapping:
5 <-> 7
6 <-> 18
7 <-> 24
8 <-> 28
9 <-> 34
10 <-> 38
11 <-> 44
12 <-> 48
13 <-> 49
15 <-> 15
17 <-> 53
19 <-> 16
29 <-> 66
