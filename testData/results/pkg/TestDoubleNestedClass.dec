package pkg;

import java.util.function.Supplier;

public abstract class TestDoubleNestedClass {
   private static final TestDoubleNestedClass INNER1 = new TestDoubleNestedClass() {
      private int x = 5;

      @Override
      Object test() {
         class Local {
            int getX() {
               return x;
            }
         }

         return new Local();
      }
   };
   private static final TestDoubleNestedClass INNER2 = new TestDoubleNestedClass() {
      @Override
      Object test() {
         return new Object() {
         };
      }
   };

   abstract Object test();

   static class Child1 {
      int x = 5;

      Supplier<TestDoubleNestedClass> foo(int var1) {
         byte var2 = 10;
         return () -> {
            return new TestDoubleNestedClass() {
               @Override
               Object test() {
                  int var1x = Child1.this.x + var1;
                  int var2x = var1 + var2;
                  return Child1.this.x + var1x + var2x;
               }
            };
         };
      }
   }
}

class 'pkg/TestDoubleNestedClass$1$1Local' {
   method 'getX ()I' {
      1      12
      2      12
      3      12
      4      12
      5      12
      6      12
      7      12
   }
}

class 'pkg/TestDoubleNestedClass$1' {
   method 'test ()Ljava/lang/Object;' {
      8      16
   }
}

class 'pkg/TestDoubleNestedClass$2' {
   method 'test ()Ljava/lang/Object;' {
      8      22
   }
}

class 'pkg/TestDoubleNestedClass$Child1' {
   method 'foo (I)Ljava/util/function/Supplier;' {
      0      33
      1      33
      2      33
      b      34
   }

   method 'lambda$foo$0 (II)Lpkg/TestDoubleNestedClass;' {
      a      35
   }
}

class 'pkg/TestDoubleNestedClass$Child1$1' {
   method 'test ()Ljava/lang/Object;' {
      1      38
      2      38
      3      38
      4      38
      5      38
      6      38
      8      38
      9      38
      a      38
      b      38
      c      38
      e      39
      f      39
      10      39
      12      39
      13      39
      14      39
      15      39
      16      39
      18      40
      19      40
      1a      40
      1b      40
      1c      40
      1d      40
      1e      40
      1f      40
      20      40
      21      40
      22      40
      23      40
      24      40
      25      40
   }
}

Lines mapping:
