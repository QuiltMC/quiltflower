package pkg;

import java.util.List;
import java.util.Random;

public class TestIfLoop {
   public int testCompoundCondition(int i, int j) {
      while(true) {
         if (i > 0 && j < 3) {// 8
            if (j < 0) {// 9
               --j;// 10
               if (i > 3 && j == -2) {// 12 13
                  j = 1;// 14
               }
            }

            if (i <= 10) {// 19
               continue;
            }

            return i - 1;// 20 21
         }

         return 3;// 25
      }
   }

   public Object testCollection(List<Object> list) {
      while(true) {
         if (!list.isEmpty()) {// 29
            if (list.size() > 3) {// 30
               list.remove(3);// 31
               continue;
            }

            return list.remove(0);// 33
         }

         return null;// 37
      }
   }

   public void testCompound2(int a, int b, Random random) {
      a = random.nextInt(8) - random.nextInt(8) + a;// 41

      for(int var5 = random.nextInt(8) - random.nextInt(8) + b; a >= 0 && a <= 20 && var5 >= 0 && var5 <= 20; var5 -= random.nextInt(4) - random.nextInt(4)) {// 42 44 46
         a -= random.nextInt(4) - random.nextInt(4);// 45
      }

   }// 48

   public int testElseIf(int i) {
      while(true) {
         if (i > 0) {// 51
            if (i == 10) {// 52
               ++i;// 53
               continue;
            }

            if (i == 11) {// 54
               i += 2;// 55
               continue;
            }

            if (i == 12) {// 56
               --i;// 57
               continue;
            }

            if (i == 13) {// 58
               i /= 2;// 59
               continue;
            }

            if (i == 14) {// 60
               i -= 4;// 61
               continue;
            }

            throw new RuntimeException();// 63
         }

         return 2;// 67
      }
   }
}

class 'pkg/TestIfLoop' {
   method 'testCompoundCondition (II)I' {
      0      8
      1      8
      4      8
      5      8
      6      8
      9      9
      a      9
      d      10
      e      10
      f      10
      10      11
      11      11
      12      11
      15      11
      16      11
      17      11
      18      11
      1b      12
      1c      12
      1d      16
      1e      16
      1f      16
      20      16
      23      20
      24      20
      25      20
      27      20
      28      23
      29      23
   }

   method 'testCollection (Ljava/util/List;)Ljava/lang/Object;' {
      0      29
      1      29
      2      29
      3      29
      4      29
      5      29
      6      29
      9      30
      a      30
      b      30
      c      30
      d      30
      e      30
      f      30
      10      30
      13      31
      14      31
      15      31
      16      31
      17      31
      18      31
      19      31
      1b      32
      1e      35
      1f      35
      20      35
      21      35
      22      35
      23      35
      24      35
      25      35
      26      38
      27      38
   }

   method 'testCompound2 (IILjava/util/Random;)V' {
      0      43
      1      43
      2      43
      3      43
      4      43
      5      43
      6      43
      7      43
      8      43
      9      43
      a      43
      b      43
      c      43
      d      43
      e      43
      f      43
      10      45
      11      45
      12      45
      13      45
      14      45
      15      45
      16      45
      17      45
      18      45
      19      45
      1a      45
      1b      45
      1c      45
      1d      45
      1e      45
      1f      45
      20      45
      21      45
      24      45
      25      45
      26      45
      27      45
      2a      45
      2b      45
      2e      45
      2f      45
      30      45
      31      45
      35      46
      36      46
      37      46
      38      46
      39      46
      3a      46
      3b      46
      3c      46
      3d      46
      3e      46
      3f      46
      41      46
      43      45
      44      45
      45      45
      46      45
      47      45
      48      45
      49      45
      4a      45
      4b      45
      4c      45
      4d      45
      4f      45
      53      49
   }

   method 'testElseIf (I)I' {
      0      53
      1      53
      4      54
      5      54
      6      54
      7      54
      a      55
      b      55
      c      55
      d      56
      10      59
      11      59
      12      59
      13      59
      16      60
      17      60
      18      60
      19      61
      1c      64
      1d      64
      1e      64
      1f      64
      22      65
      23      65
      24      65
      25      66
      28      69
      29      69
      2a      69
      2b      69
      2f      70
      31      70
      32      71
      35      74
      36      74
      37      74
      38      74
      3b      75
      3c      75
      3d      75
      3e      76
      48      79
      49      82
      4a      82
   }
}

Lines mapping:
8 <-> 9
9 <-> 10
10 <-> 11
12 <-> 12
13 <-> 12
14 <-> 13
19 <-> 17
20 <-> 21
21 <-> 21
25 <-> 24
29 <-> 30
30 <-> 31
31 <-> 32
33 <-> 36
37 <-> 39
41 <-> 44
42 <-> 46
44 <-> 46
45 <-> 47
46 <-> 46
48 <-> 50
51 <-> 54
52 <-> 55
53 <-> 56
54 <-> 60
55 <-> 61
56 <-> 65
57 <-> 66
58 <-> 70
59 <-> 71
60 <-> 75
61 <-> 76
63 <-> 80
67 <-> 83
