package pkg;

public class TestPatternMatching17 {
   public void testSimple(Object obj) {
      if (obj instanceof String str) {// 5
         System.out.println(str.length());// 6
      }

   }// 8

   public void testInverted(Object obj) {
      if (!(obj instanceof String str)) {// 11
         System.out.println("Oh no");// 12
      }

   }// 14

   public void testCompound(Object obj) {
      if (obj instanceof String str && str.contains("hi")) {// 17
         System.out.println(str.length());// 18
      }

   }// 20

   public void testSimpleLoop(Object obj) {
      while(obj instanceof String str) {// 24
         System.out.println(str.length());// 25
         obj = str.intern();// 26
      }

   }// 28

   public void testSimpleLoopUnused(Object obj) {
      while(obj instanceof String str) {// 31
         obj = obj.hashCode() + "";// 32
      }

   }// 34

   public void testInvertedLoop(Object obj) {
      while(!(obj instanceof String str)) {// 37
         System.out.println("Oh no");// 38
         obj = obj.toString();// 39
      }

      System.out.println(str.hashCode());// 41
   }

   public void testInvertedLoopUnused(Object obj) {
      while(!(obj instanceof String str)) {// 45
         System.out.println("Oh no");// 46
         obj = obj.toString();// 47
      }

   }

   public void testCompoundLoop(Object obj) {
      while(obj instanceof String str && str.contains("hi")) {// 52
         obj = str.substring(1);// 53
      }

   }// 55

   public boolean testReturn(Object obj) {
      return obj instanceof String s && s.length() > 5;// 58
   }

   public int testReturnTernary(Object obj) {
      return obj instanceof String s ? s.length() : 0;// 62
   }

   public int testReturnTernaryComplex(Object obj) {
      return (!(obj instanceof String s) || s.length() <= 5) && !(obj instanceof Integer) ? 1 : 4;// 66
   }

   public void testLoop(Object obj) {
      while(obj instanceof String s && s.length() > 10) {// 70
         String var3 = s.substring(1);// 71
         obj = var3.substring(1);// 72
         System.out.println(var3);// 74
      }

   }// 76

   public void testSimpleReturn(Object obj) {
      if (!(obj instanceof String str) || str.length() <= 5) {// 79 80
         System.out.println("test");// 85
      }
   }// 81 86

   public void testMessyLVT(Object obj) {
      String a = "a";// 90
      String b = "b";// 91
      String c = "c";// 92
      String d = "d";// 93
      String e = "e";// 94
      String f = "f";// 95
      String g = "g";// 96
      String h = "h";// 97
      String var10 = "i";// 98
      if (obj instanceof String str) {// 100
         System.out.println(str.length());// 101
      }

   }// 103
}

class 'pkg/TestPatternMatching17' {
   method 'testSimple (Ljava/lang/Object;)V' {
      0      4
      1      4
      2      4
      3      4
      4      4
      b      4
      c      5
      d      5
      e      5
      f      5
      10      5
      11      5
      12      5
      13      5
      16      8
   }

   method 'testInverted (Ljava/lang/Object;)V' {
      0      11
      1      11
      2      11
      3      11
      4      11
      b      11
      f      12
      10      12
      11      12
      12      12
      13      12
      14      12
      17      15
   }

   method 'testCompound (Ljava/lang/Object;)V' {
      0      18
      1      18
      2      18
      3      18
      4      18
      b      18
      c      18
      d      18
      e      18
      f      18
      10      18
      11      18
      12      18
      15      19
      16      19
      17      19
      18      19
      19      19
      1a      19
      1b      19
      1c      19
      1f      22
   }

   method 'testSimpleLoop (Ljava/lang/Object;)V' {
      0      25
      1      25
      2      25
      3      25
      4      25
      b      25
      c      26
      d      26
      e      26
      f      26
      10      26
      11      26
      12      26
      13      26
      14      26
      15      26
      16      27
      17      27
      18      27
      19      27
      1a      27
      1e      30
   }

   method 'testSimpleLoopUnused (Ljava/lang/Object;)V' {
      0      33
      1      33
      2      33
      3      33
      4      33
      b      33
      c      34
      d      34
      e      34
      f      34
      10      34
      11      34
      12      34
      13      34
      14      34
      15      34
      19      37
   }

   method 'testInvertedLoop (Ljava/lang/Object;)V' {
      0      40
      1      40
      2      40
      3      40
      4      40
      b      40
      c      45
      d      45
      e      45
      f      41
      10      41
      11      41
      12      41
      13      41
      14      41
      15      41
      16      41
      17      42
      18      42
      19      42
      1a      42
      1b      42
      1c      45
      1d      45
      1e      45
      1f      45
      20      45
      21      45
      22      45
      23      45
      24      45
      25      45
      26      46
      27      46
      28      46
   }

   method 'testInvertedLoopUnused (Ljava/lang/Object;)V' {
      0      49
      1      49
      2      49
      3      49
      4      49
      b      49
      c      54
      d      54
      e      54
      f      50
      10      50
      11      50
      12      50
      13      50
      14      50
      15      50
      16      50
      17      51
      18      51
      19      51
      1a      51
      1b      51
      1c      54
      1d      54
      1e      54
   }

   method 'testCompoundLoop (Ljava/lang/Object;)V' {
      0      57
      1      57
      2      57
      3      57
      4      57
      b      57
      c      57
      d      57
      e      57
      f      57
      10      57
      11      57
      15      58
      16      58
      17      58
      18      58
      19      58
      1a      58
      1e      61
   }

   method 'testReturn (Ljava/lang/Object;)Z' {
      0      64
      1      64
      2      64
      3      64
      4      64
      b      64
      c      64
      d      64
      e      64
      f      64
      10      64
      11      64
      19      64
   }

   method 'testReturnTernary (Ljava/lang/Object;)I' {
      0      68
      1      68
      2      68
      3      68
      4      68
      b      68
      c      68
      d      68
      e      68
      f      68
      13      68
      14      68
   }

   method 'testReturnTernaryComplex (Ljava/lang/Object;)I' {
      0      72
      1      72
      2      72
      3      72
      4      72
      b      72
      c      72
      d      72
      e      72
      f      72
      10      72
      11      72
      14      72
      15      72
      16      72
      17      72
      18      72
      1b      72
      1f      72
      20      72
   }

   method 'testLoop (Ljava/lang/Object;)V' {
      0      76
      1      76
      2      76
      3      76
      4      76
      b      76
      c      76
      d      76
      e      76
      f      76
      10      76
      11      76
      12      76
      15      77
      16      77
      17      77
      18      77
      19      77
      1a      77
      1b      78
      1c      78
      1d      78
      1e      78
      1f      78
      20      78
      21      79
      22      79
      23      79
      24      79
      25      79
      26      79
      27      79
      2b      82
   }

   method 'testSimpleReturn (Ljava/lang/Object;)V' {
      0      85
      1      85
      2      85
      3      85
      4      85
      b      85
      c      85
      d      85
      e      85
      f      85
      10      85
      11      85
      14      88
      15      86
      16      86
      17      86
      18      86
      19      86
      1a      86
      1b      86
      1c      86
      1d      88
   }

   method 'testMessyLVT (Ljava/lang/Object;)V' {
      0      91
      1      91
      2      91
      3      92
      4      92
      5      92
      6      93
      7      93
      8      93
      9      93
      a      94
      b      94
      c      94
      d      94
      e      95
      f      95
      10      95
      11      95
      12      96
      13      96
      14      96
      15      96
      16      97
      17      97
      18      97
      19      97
      1a      98
      1b      98
      1c      98
      1d      98
      1e      99
      1f      99
      20      99
      21      99
      22      100
      23      100
      24      100
      25      100
      26      100
      2d      100
      2e      101
      2f      101
      30      101
      31      101
      32      101
      33      101
      34      101
      35      101
      38      104
   }
}

Lines mapping:
5 <-> 5
6 <-> 6
8 <-> 9
11 <-> 12
12 <-> 13
14 <-> 16
17 <-> 19
18 <-> 20
20 <-> 23
24 <-> 26
25 <-> 27
26 <-> 28
28 <-> 31
31 <-> 34
32 <-> 35
34 <-> 38
37 <-> 41
38 <-> 42
39 <-> 43
41 <-> 46
45 <-> 50
46 <-> 51
47 <-> 52
52 <-> 58
53 <-> 59
55 <-> 62
58 <-> 65
62 <-> 69
66 <-> 73
70 <-> 77
71 <-> 78
72 <-> 79
74 <-> 80
76 <-> 83
79 <-> 86
80 <-> 86
81 <-> 89
85 <-> 87
86 <-> 89
90 <-> 92
91 <-> 93
92 <-> 94
93 <-> 95
94 <-> 96
95 <-> 97
96 <-> 98
97 <-> 99
98 <-> 100
100 <-> 101
101 <-> 102
103 <-> 105
Not mapped:
42
49
