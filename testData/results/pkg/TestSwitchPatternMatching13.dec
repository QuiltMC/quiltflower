package pkg;

public class TestSwitchPatternMatching13 {
   static void test(TestSwitchPatternMatching13.Shape s) {
      switch(s) {// 5
         case null:
            if (Math.random() > 0.0) {// 27
               System.out.println("Lucky null");// 28
            }

            return;// 34
         case var1 instanceof TestSwitchPatternMatching13.Triangle t && t.calculateArea() > 150.0:// 6
            if (t.hashCode() > 0) {// 7
               System.out.println("Larger positive-hash triangle");// 8
            }

            System.out.println("Larger triangle: " + t);// 10
            return;
         case var1 instanceof TestSwitchPatternMatching13.Triangle t && t.calculateArea() > 50.0:// 12
            System.out.println("Smaller triangle");// 13
            return;
         case var1 instanceof TestSwitchPatternMatching13.Triangle t && t.calculateArea() > 100.0:// 14
            System.out.println("Large triangle");// 15

            while(Math.random() > 0.5) {// 16
               System.out.println("Keep going");// 17
            }

            return;
         case var1 instanceof TestSwitchPatternMatching13.Triangle t:// 20
            if (t.hashCode() > 0) {// 21
               System.out.println("Small positive-hash triangle");// 22
            }

            System.out.println("Small triangle");// 24
            return;
         default:
            System.out.println("Non-triangle");// 32
      }
   }

   private abstract class Shape {
      abstract double calculateArea();
   }

   private class Triangle extends TestSwitchPatternMatching13.Shape {
      @Override
      double calculateArea() {
         return 0.0;// 44
      }
   }
}

class 'pkg/TestSwitchPatternMatching13' {
   method 'test (Lpkg/TestSwitchPatternMatching13$Shape;)V' {
      0      4
      b      4
      2c      11
      30      11
      31      11
      32      11
      33      11
      34      11
      35      11
      36      11
      37      11
      38      11
      41      12
      42      12
      43      12
      44      12
      45      12
      48      13
      49      13
      4a      13
      4b      13
      4c      13
      4d      13
      50      16
      51      16
      52      16
      53      16
      54      16
      55      16
      56      16
      57      16
      58      16
      59      16
      5a      16
      5b      16
      5f      18
      63      18
      64      18
      65      18
      66      18
      67      18
      68      18
      69      18
      6a      18
      6b      18
      6c      18
      6d      18
      76      19
      77      19
      78      19
      79      19
      7a      19
      7b      19
      7c      19
      7d      19
      81      21
      85      21
      86      21
      87      21
      88      21
      89      21
      8a      21
      8b      21
      8c      21
      8d      21
      8e      21
      8f      21
      98      22
      99      22
      9a      22
      9b      22
      9c      22
      9d      22
      a0      24
      a1      24
      a2      24
      a3      24
      a4      24
      a5      24
      a6      24
      aa      25
      ab      25
      ac      25
      ad      25
      ae      25
      af      25
      b0      25
      b1      25
      b5      29
      b9      29
      ba      29
      bb      30
      bc      30
      bd      30
      be      30
      bf      30
      c0      30
      c3      31
      c4      31
      c5      31
      c6      31
      c7      31
      c8      31
      cb      34
      cc      34
      cd      34
      ce      34
      cf      34
      d0      34
      d1      34
      d2      34
      d6      6
      d7      6
      d8      6
      d9      6
      da      6
      db      6
      de      7
      df      7
      e0      7
      e1      7
      e2      7
      e3      7
      e4      7
      e5      7
      e9      37
      ea      37
      eb      37
      ec      37
      ed      37
      ee      37
      ef      37
      f0      37
      f4      10
   }
}

class 'pkg/TestSwitchPatternMatching13$Triangle' {
   method 'calculateArea ()D' {
      0      48
      1      48
   }
}

Lines mapping:
5 <-> 5
6 <-> 12
7 <-> 13
8 <-> 14
10 <-> 17
12 <-> 19
13 <-> 20
14 <-> 22
15 <-> 23
16 <-> 25
17 <-> 26
20 <-> 30
21 <-> 31
22 <-> 32
24 <-> 35
27 <-> 7
28 <-> 8
32 <-> 38
34 <-> 11
44 <-> 49
Not mapped:
11
25
